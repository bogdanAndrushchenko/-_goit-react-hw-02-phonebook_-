{"version":3,"sources":["Components/PhoneList/PhoneList.module.css","Components/Filter/Filter.module.css","redux/contacts/contact-types-actions.js","redux/contacts/contacts-test-items.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-actions.js","Components/FormPhone/FormPhone.jsx","Components/PhoneList/PhoneList.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/FormPhone/FormPhone.module.css"],"names":["module","exports","testContact","id","name","number","ADD_CONTACT","actionTypes","DELETE_CONTACT","FILTER_CHANGE","combineReducers","items","state","type","payload","filter","rootReducer","contacts","contactsReducer","store","createStore","composeWithDevTools","typeActions","connect","dispatch","onFormSubmit","shortId","generate","contactActions","useState","setName","setNumber","handleInputChange","e","currentTarget","value","console","log","validatorInput","onName","find","contact","toast","success","position","handleCheckUniqueContact","error","autoClose","resetForm","onSubmit","preventDefault","className","s","Form","Form_label","placeholder","onChange","Button","deleteContact","contactID","actions","phoneList","normalizedFilter","toLowerCase","includes","getFilterContact","PhoneList","length","map","PhoneList_item","onClick","onSearch","target","Filter_label","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25cea439.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhoneList\":\"PhoneList_PhoneList__3Xk2M\",\"PhoneList_item\":\"PhoneList_PhoneList_item__23MGQ\",\"Button\":\"PhoneList_Button__4AlOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter_label\":\"Filter_Filter_label__2cvYX\"};","const ADD_CONTACT = 'contact/add';\nconst DELETE_CONTACT = 'contact/delete';\nconst FILTER_CHANGE = 'contact/filter';\n\nexport default { ADD_CONTACT, DELETE_CONTACT, FILTER_CHANGE };\n","const testContact = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  { id: 'id-5', name: 'Bogdan Andrush..', number: '899-24-76' },\n];\n\nexport default testContact;\n","import { combineReducers } from 'redux';\n\nimport actionTypes from './contact-types-actions';\nimport testContact from './contacts-test-items';\n\nconst { ADD_CONTACT, DELETE_CONTACT, FILTER_CHANGE } = actionTypes;\n\nconst itemsReducer = (state = [...testContact], { type, payload }) => {\n  switch (type) {\n    case ADD_CONTACT:\n      return [...state, payload];\n    case DELETE_CONTACT:\n      return state.filter(({ id }) => id !== payload);\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case FILTER_CHANGE:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import typeActions from './contact-types-actions';\nimport shortId from 'shortid';\n\nconst { ADD_CONTACT, DELETE_CONTACT, FILTER_CHANGE } = typeActions;\n\nexport const addContact = (name, number) => ({\n  type: ADD_CONTACT,\n  payload: {\n    id: shortId.generate(),\n    name,\n    number,\n  },\n});\n\nexport const deleteContact = contactID => ({\n  type: DELETE_CONTACT,\n  payload: contactID,\n});\n\nexport const onChangeFilter = value => ({\n  type: FILTER_CHANGE,\n  payload: value,\n});\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport * as contactActions from '../../redux/contacts/contacts-actions';\nimport s from './FormPhone.module.css';\n\nconst FormPhone = ({ contacts, onFormSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log(name);\n    }\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const formIsValid = validatorInput();\n    if (!formIsValid) {\n      return;\n    }\n\n    onFormSubmit(name, number);\n    resetForm();\n  };\n\n  const handleCheckUniqueContact = name => {\n    const onName = !!contacts.find(contact => contact.name === name);\n    toast.success(`${name} is already in contacts`, { position: 'top-left' });\n    return !onName;\n  };\n\n  const validatorInput = () => {\n    if (!name || !number) {\n      toast.error('Field \"name\" or \"number\" is entry. Try again!', {\n        autoClose: 4000,\n        position: 'top-center',\n      });\n      return false;\n    }\n    return handleCheckUniqueContact(name);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm} className={s.Form}>\n      <label className={s.Form_label}>\n        <p>Name :</p>\n        <input\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          placeholder=\"Enter your name\"\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={s.Form_label}>\n        <p>Number :</p>\n        <input\n          name=\"number\"\n          type=\"number\"\n          value={number}\n          placeholder=\"Enter your number\"\n          onChange={handleInputChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.Button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nFormPhone.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFormSubmit: (name, number) =>\n    dispatch(contactActions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormPhone);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport s from './PhoneList.module.css';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nconst PhoneList = ({ contacts, filter, deleteContact }) => {\n  const getFilterContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const phoneList = getFilterContact();\n\n  return (\n    <ul className={s.PhoneList}>\n      <p>Total contacts : {phoneList.length}</p>\n      {phoneList.map(({ id, name, number }) => (\n        <li key={id} className={s.PhoneList_item}>\n          {name} : <span>{number}</span>\n          <button\n            type=\"button\"\n            className={s.Button}\n            onClick={() => {\n              deleteContact(id);\n            }}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nPhoneList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: contactID => dispatch(actions.deleteContact(contactID)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneList);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport * as contactActions from '../../redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onSearch }) => (\n  <label className={s.Filter_label}>\n    Find contact by name:\n    <input\n      type=\"search\"\n      value={value}\n      onChange={onSearch}\n      placeholder=\"search name\"\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onSearch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSearch: e => dispatch(contactActions.onChangeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import FormPhone from './Components/FormPhone';\nimport PhoneList from './Components/PhoneList';\nimport Filter from './Components/Filter';\nimport { ToastContainer } from 'react-toastify';\n\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst App = () => {\n  // const [contacts, setContacts] = useState(() => {\n  //     return JSON.parse(localStorage.getItem('contacts')) ?? [...testContact];\n  // });\n\n  // useEffect(() => {\n  //     window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  return (\n    <div className=\"Phonebook\">\n      <h2 className=\"Phonebook_title\">Phonebook</h2>\n      <FormPhone />\n      <h3 className=\"Phonebook_title\">Contacts</h3>\n      <Filter />\n      <PhoneList />\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\n\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormPhone_Form__3nLCH\",\"Form_label\":\"FormPhone_Form_label__lAg1a\",\"Button\":\"FormPhone_Button__2hQpp\"};"],"sourceRoot":""}