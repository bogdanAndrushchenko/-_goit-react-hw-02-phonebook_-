{"version":3,"sources":["Components/PhoneList/PhoneList.module.css","Components/Filter/Filter.module.css","Components/FormPhone/FormPhone.module.css","Components/FormPhone/FormPhone.jsx","Components/PhoneList/PhoneList.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","INITIAL_STATE_FORM","name","number","FormPhone","state","handleInputChange","e","currentTarget","value","setState","handleSubmitForm","preventDefault","id","shortId","generate","onFormSubmit","props","validatorInput","resetForm","onValid","alert","this","onSubmit","className","s","Form","Form_label","type","placeholder","onChange","Button","Component","PhoneList","contacts","deleteContact","length","map","PhoneList_item","onClick","Filter","onSearch","Filter_label","App","filter","addContact","newContact","contactID","handleCheckUniqueContact","onName","find","contact","changeFilterInput","getFilterContact","normalizedFilter","toLowerCase","includes","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","searchContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4077b278.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhoneList\":\"PhoneList_PhoneList__3Teyn\",\"PhoneList_item\":\"PhoneList_PhoneList_item__3lSwj\",\"Button\":\"PhoneList_Button__2BLyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter_label\":\"Filter_Filter_label__28cVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormPhone_Form__11h0x\",\"Form_label\":\"FormPhone_Form_label__1tfxN\",\"Button\":\"FormPhone_Button__2Z-Wb\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortId from 'shortid';\n\nimport s from './FormPhone.module.css';\n\nconst INITIAL_STATE_FORM = {\n  name: '',\n  number: '',\n};\n\nclass FormPhone extends Component {\n  static propTypes = {\n    onFormSubmit: PropTypes.func.isRequired,\n    onValid: PropTypes.func.isRequired,\n  };\n\n  state = {\n    ...INITIAL_STATE_FORM,\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmitForm = e => {\n    e.preventDefault();\n    const id = shortId.generate();\n    const { onFormSubmit } = this.props;\n\n    const formIsValid = this.validatorInput();\n    if (!formIsValid) {\n      return;\n    }\n\n    onFormSubmit({ id, ...this.state });\n    this.resetForm();\n  };\n\n  validatorInput = () => {\n    const { name, number } = this.state;\n    const { onValid } = this.props;\n    if (!name || !number) {\n      alert('Field \"name\" and \"number\" is entry. Try again!');\n      return false;\n    }\n    return onValid(name);\n  };\n\n  resetForm = () => {\n    this.setState({ ...INITIAL_STATE_FORM });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmitForm} className={s.Form}>\n        <label className={s.Form_label}>\n          <p>Name :</p>\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            placeholder=\"Enter your name\"\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <label className={s.Form_label}>\n          <p>Number :</p>\n          <input\n            name=\"number\"\n            type=\"number\"\n            value={number}\n            placeholder=\"Enter your number\"\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.Button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default FormPhone;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './PhoneList.module.css';\n\nconst PhoneList = ({ contacts, deleteContact }) => {\n  return (\n    <ul className={s.PhoneList}>\n      <p>Total contacts : {contacts.length}</p>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.PhoneList_item}>\n          {name} : <span>{number}</span>\n          <button\n            type=\"button\"\n            className={s.Button}\n            onClick={() => {\n              deleteContact(id);\n            }}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nPhoneList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default PhoneList;\n","import PropTypes from 'prop-types';\n\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onSearch }) => (\n  <label className={s.Filter_label}>\n    Find contact by name:\n    <input\n      type=\"search\"\n      value={value}\n      onChange={onSearch}\n      placeholder=\"search name\"\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\n\nimport './App.css';\n\nimport FormPhone from './Components/FormPhone';\nimport PhoneList from './Components/PhoneList';\nimport Filter from './Components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n      { id: 'id-5', name: 'Bogdan Andrush..', number: '899-24-76' },\n    ],\n    filter: '',\n  };\n\n  addContact = newContact =>\n    this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] }));\n\n  deleteContact = contactID => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(({ id }) => id !== contactID),\n    }));\n  };\n\n  handleCheckUniqueContact = name => {\n    const { contacts } = this.state;\n    const onName = !!contacts.find(contact => contact.name === name);\n    alert(`${name} is already in contacts`);\n    return !onName;\n  };\n\n  changeFilterInput = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilterContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    this.setState({ contacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const searchContact = this.getFilterContact();\n    return (\n      <div className=\"Phonebook\">\n        <h2 className=\"Phonebook_title\">Phonebook</h2>\n        <FormPhone\n          onFormSubmit={this.addContact}\n          onValid={this.handleCheckUniqueContact}\n        />\n        <h3 className=\"Phonebook_title\">Contacts</h3>\n        <Filter onSearch={this.changeFilterInput} value={filter} />\n        <PhoneList\n          contacts={searchContact}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}