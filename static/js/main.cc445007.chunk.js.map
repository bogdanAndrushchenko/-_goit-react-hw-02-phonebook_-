{"version":3,"sources":["Components/FormPhone/FormPhone.module.css","Components/PhoneList/PhoneList.module.css","Components/PhoneBook/PhoneBook.module.css","Components/Loader/Loader.module.css","Components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducers.js","redux/contacts/contacts-selectors.js","redux/store.js","Components/FormPhone/FormPhone.jsx","Components/Loader/Loader.jsx","Components/PhoneList/PhoneList.jsx","Components/Filter/Filter.jsx","Components/PhoneBook/PhoneBook.jsx","App.js","index.js"],"names":["module","exports","onChangeFilter","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","contactActions","axios","defaults","baseURL","dispatch","a","get","data","name","number","item","id","shortId","generate","post","contactID","delete","itemsReducer","createReducer","_","payload","state","filter","filterReducer","loadingReducer","contactReducer","combineReducers","items","loading","getFilter","contacts","getItems","getLoading","getFilterContact","createSelector","normalizedFilter","toLowerCase","contact","includes","contactReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","addContact","contactOperations","contactSelectors","connect","onFormSubmit","useState","setName","setNumber","handleInputChange","e","currentTarget","value","console","log","validatorInput","onName","find","toast","success","position","autoClose","handleCheckUniqueContact","error","resetForm","onSubmit","preventDefault","className","s","Form","Form_label","type","placeholder","onChange","Button","Loader","ldsSpinner","getContacts","deleteContacts","phoneList","deleteContact","useDispatch","useEffect","PhoneList","length","map","PhoneList_item","onClick","warning","onSearch","target","Filter_label","PhoneBook","Phonebook","Phonebook_title","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc445007.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormPhone_Form__3nLCH\",\"Form_label\":\"FormPhone_Form_label__lAg1a\",\"Button\":\"FormPhone_Button__2hQpp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhoneList\":\"PhoneList_PhoneList__3Xk2M\",\"PhoneList_item\":\"PhoneList_PhoneList_item__23MGQ\",\"Button\":\"PhoneList_Button__4AlOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Phonebook\":\"PhoneBook_Phonebook__2PYbT\",\"Phonebook_title\":\"PhoneBook_Phonebook_title__12KhI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsSpinner\":\"Loader_ldsSpinner__2CDLF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter_label\":\"Filter_Filter_label__2cvYX\"};","import {createAction} from '@reduxjs/toolkit';\n\nconst onChangeFilter = createAction('contact/filter');\n\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\nconst fetchContactsError = createAction('contacts/fetchError');\n\nconst addContactsRequest = createAction('contacts/addRequest');\nconst addContactsSuccess = createAction('contacts/addSuccess');\nconst addContactsError = createAction('contacts/addError');\n\nconst deleteContactsRequest = createAction('contacts/deleteRequest');\nconst deleteContactsSuccess = createAction('contacts/deleteSuccess');\nconst deleteContactsError = createAction('contacts/deleteError');\n\nexport default {\n    onChangeFilter,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactsRequest,\n    addContactsSuccess,\n    addContactsError,\n    deleteContactsRequest,\n    deleteContactsSuccess,\n    deleteContactsError,\n};\n\n// const addContact = (name, number) => ({\n//   type: ADD_CONTACT,\n//   payload: {\n//     id: shortId.generate(),\n//     name,\n//     number,\n//   },\n// });\n\n// const deleteContact = contactID => ({\n//   type: DELETE_CONTACT,\n//   payload: contactID,\n// });\n\n// const onChangeFilter = value => ({\n//   type: FILTER_CHANGE,\n//   payload: value,\n// });\n","import axios from 'axios';\nimport shortId from 'shortid';\nimport {contactActions} from './index';\n\nconst {\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactsRequest,\n    addContactsSuccess,\n    addContactsError,\n    deleteContactsRequest,\n    deleteContactsSuccess,\n    deleteContactsError,\n} = contactActions;\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst getContacts = () => async dispatch => {\n    dispatch(fetchContactsRequest());\n    try {\n        const {data} = await axios.get('/contacts');\n        dispatch(fetchContactsSuccess(data));\n    } catch (error) {\n        dispatch(fetchContactsError(error));\n    }\n};\n\nconst addContact = (name, number) => async dispatch => {\n    const item = {\n        id: shortId.generate(),\n        name,\n        number,\n    };\n    dispatch(addContactsRequest());\n    try {\n        const {data} = await axios.post('/contacts', item);\n        dispatch(addContactsSuccess(data));\n    } catch (e) {\n        dispatch(addContactsError(e));\n    }\n};\n\nconst deleteContacts = contactID => async dispatch => {\n    dispatch(deleteContactsRequest());\n    try {\n        await axios.delete(`/contacts/${contactID}`);\n        dispatch(deleteContactsSuccess(contactID));\n    } catch (e) {\n        dispatch(deleteContactsError(e));\n    }\n};\n\nexport default {\n    getContacts,\n    addContact,\n    deleteContacts,\n};\n","import {createReducer, combineReducers} from '@reduxjs/toolkit';\nimport {contactActions} from './index';\n\nconst {\n    onChangeFilter,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    addContactsRequest,\n    addContactsSuccess,\n    addContactsError,\n    deleteContactsRequest,\n    deleteContactsSuccess,\n    deleteContactsError,\n} = contactActions;\n\nconst itemsReducer = createReducer([], {\n    [fetchContactsSuccess]: (_, {payload}) => payload,\n    [addContactsSuccess]: (state, {payload}) => [...state, payload],\n    [deleteContactsSuccess]: (state, {payload}) =>\n        state.filter(({id}) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n    [onChangeFilter]: (_, {payload}) => payload,\n});\n\nconst loadingReducer = createReducer(false, {\n    [fetchContactsRequest]: () => true,\n    [fetchContactsSuccess]: () => false,\n    [fetchContactsError]: () => false,\n    [addContactsRequest]: () => true,\n    [addContactsSuccess]: () => false,\n    [addContactsError]: () => false,\n    [deleteContactsRequest]: () => true,\n    [deleteContactsSuccess]: () => false,\n    [deleteContactsError]: () => false,\n});\n\nconst contactReducer = combineReducers({\n    items: itemsReducer,\n    filter: filterReducer,\n    loading: loadingReducer,\n});\n\nexport default {contactReducer};\n\n// import actionTypes from './contact-types-actions';\n// const {ADD_CONTACT, DELETE_CONTACT, FILTER_CHANGE} = actionTypes;\n// const itemsReducer = (state = [...testContact], { type, payload }) => {\n//   switch (type) {\n//     case ADD_CONTACT:\n//       return [...state, payload];\n//     case DELETE_CONTACT:\n//       return state.filter(({ id }) => id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = '', {type, payload}) => {\n//     switch (type) {\n//         case FILTER_CHANGE:\n//             return payload;\n//         default:\n//             return state;\n//     }\n// };\n","import {createSelector} from '@reduxjs/toolkit'\n\nconst getFilter = state => state.contacts.filter;\nconst getItems = state => state.contacts.items;\nconst getLoading = state => state.contacts.loading;\n\nconst getFilterContact = createSelector(\n    [getFilter, getItems],\n    (filter, contacts) => {\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        )\n    }\n);\n\nexport default {\n    getFilter,\n    getItems,\n    getLoading,\n    getFilterContact,\n};\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport { contactReducers } from './contacts';\n\nconst { contactReducer } = contactReducers;\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const persistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };persistReducer(persistConfig\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);persistor\n\nexport default store;\n","import {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {toast} from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport {contactOperations, contactSelectors} from '../../redux/contacts';\nimport s from './FormPhone.module.css';\n\nconst {addContact} = contactOperations;\nconst {getItems} = contactSelectors;\n\nconst FormPhone = ({contacts, onFormSubmit}) => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleInputChange = e => {\n        const {name, value} = e.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                console.log(name);\n        }\n    };\n\n    const handleSubmitForm = e => {\n        e.preventDefault();\n        const formIsValid = validatorInput();\n        if (!formIsValid) {\n            return;\n        }\n\n        onFormSubmit(name, number);\n        resetForm();\n    };\n\n    const handleCheckUniqueContact = name => {\n        const onName = !!contacts.find(contact => contact.name === name);\n        toast.success(`${name} is already in contacts`, {\n            position: 'top-left',\n            autoClose: 4000,\n        });\n        return !onName;\n    };\n\n    const validatorInput = () => {\n        if (!name || !number) {\n            toast.error('Field \"name\" or \"number\" is entry. Try again!', {\n                autoClose: 4000,\n                position: 'top-center',\n            });\n            return false;\n        }\n        return handleCheckUniqueContact(name);\n    };\n\n    const resetForm = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <form onSubmit={handleSubmitForm} className={s.Form}>\n            <label className={s.Form_label}>\n                <p>Name :</p>\n                <input\n                    name=\"name\"\n                    type=\"text\"\n                    value={name}\n                    placeholder=\"Enter your name\"\n                    onChange={handleInputChange}\n                />\n            </label>\n            <label className={s.Form_label}>\n                <p>Number :</p>\n                <input\n                    name=\"number\"\n                    type=\"number\"\n                    value={number}\n                    placeholder=\"Enter your number\"\n                    onChange={handleInputChange}\n                />\n            </label>\n            <button type=\"submit\" className={s.Button}>\n                Add contact\n            </button>\n        </form>\n    );\n};\n\nFormPhone.propTypes = {\n    onFormSubmit: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapStateToProps = state => ({\n    contacts: getItems(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onFormSubmit: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormPhone);\n","import s from \"./Loader.module.css\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={s.ldsSpinner}>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {toast} from \"react-toastify\";\n\nimport Loader from '../Loader';\nimport {contactOperations, contactSelectors} from '../../redux/contacts';\nimport s from './PhoneList.module.css';\n\nconst {getContacts, deleteContacts} = contactOperations;\nconst {getFilterContact, getLoading} = contactSelectors;\n\nconst PhoneList = ({loading, phoneList, deleteContact}) => {\n    const dispatch = useDispatch();\n    // // const items = useSelector(state => state.contacts.items);\n    // // console.log(items);\n    // console.log(filter)\n    useEffect(() => {\n        dispatch(getContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            {loading\n                ? <Loader/>\n                : <ul className={s.PhoneList}>\n                    <p>Total contacts : {phoneList.length}</p>\n                    {phoneList.map(({id, name, number}) => (\n                        <li key={id} className={s.PhoneList_item}>\n                            {name} : <span>{number}</span>\n                            <button\n                                type=\"button\"\n                                className={s.Button}\n                                onClick={() => {\n                                    deleteContact(id);\n                                    toast.warning(`Contact ${name} is deleted!`,\n                                        {\n                                            position: 'top-left',\n                                            autoClose: 4000,\n                                        })\n                                }}\n                            >\n                                Delete\n                            </button>\n                        </li>\n                    ))}\n                </ul>}\n        </>\n    );\n};\n\nPhoneList.propTypes = {\n    phoneList: PropTypes.arrayOf(PropTypes.object).isRequired,\n    loading: PropTypes.bool.isRequired,\n    deleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    phoneList: getFilterContact(state),\n    loading: getLoading(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    deleteContact: contactID => dispatch(deleteContacts(contactID)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneList);\n","import PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport {contactSelectors, contactActions} from '../../redux/contacts';\nimport s from './Filter.module.css';\n\nconst {getFilter} = contactSelectors;\nconst {onChangeFilter} = contactActions;\n\nconst Filter = ({value, onSearch}) => (\n    <label className={s.Filter_label}>\n        Find contact by name:\n        <input\n            type=\"search\"\n            value={value}\n            onChange={onSearch}\n            placeholder=\"search name\"\n        />\n    </label>\n);\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onSearch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSearch: e => dispatch(onChangeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import FormPhone from '../FormPhone';\nimport PhoneList from '../PhoneList';\nimport Filter from '../Filter';\n\nimport s from './PhoneBook.module.css';\n\nconst PhoneBook = () => {\n    return (\n        <div className={s.Phonebook}>\n            <h2 className={s.Phonebook_title}>Phonebook</h2>\n            <FormPhone/>\n            <h3 className={s.Phonebook_title}>Contacts</h3>\n            <Filter/>\n            <PhoneList/>\n        </div>\n    );\n};\n\nexport default PhoneBook;\n","import PhoneBook from './Components/PhoneBook';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst App = () => {\n  return (\n    <>\n      <PhoneBook />\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\n\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/*<PersistGate loading={null} persistor={store.persistor}>*/}\n      <App />\n      {/*</PersistGate>*/}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}